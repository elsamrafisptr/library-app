generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Member {
  id                     String   @id @default(cuid()) @db.VarChar(100)
  code                   String   @unique
  name                   String
  email                  String   @unique
  password               String
  phone_number           String?  @db.VarChar(15)
  membership_date        DateTime @default(now())
  penaltyId              String?  @db.VarChar(100)
  current_borrowed_books Int      @default(0)
  is_active              Boolean  @default(true)

  penalty Penalty? @relation(fields: [penaltyId], references: [id])
  loans   Loan[]   @relation("MemberLoans")
}

model Book {
  id                      String  @id @default(cuid()) @db.VarChar(100)
  code                    String  @unique
  title                   String
  description             String? @db.Text
  author                  String
  total_stocks            Int
  available_stocks        Int
  history_borrowed_counts Int     @default(0)
  categoryId              String? @db.VarChar(100)
  is_available            Boolean @default(true)

  loans Loan[] @relation("BookLoans")
}

model Penalty {
  id         String    @id @default(cuid()) @db.VarChar(100)
  memberId   String    @unique @db.VarChar(100)
  start_date DateTime
  end_date   DateTime?
  status     Boolean
  reason     String

  Member Member[]
}

model Loan {
  id          String     @id @default(uuid()) @db.VarChar(100)
  bookId      String     @db.VarChar(100)
  memberId    String     @db.VarChar(100)
  borrow_date DateTime   @default(now())
  return_date DateTime?
  due_date    DateTime
  status      LoanStatus

  member Member @relation("MemberLoans", fields: [memberId], references: [id])
  book   Book   @relation("BookLoans", fields: [bookId], references: [id])
}

enum LoanStatus {
  Active
  Returned
  Overdue
}
